name: Download Sentinel-2 Images

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true
      tiles:
        description: 'Comma-separated(no spaces) MGRS tiles (e.g. 11SLT,11SMV)'
        required: true
      s3_bucket":
        description: 'Input S3 bucket (eg: sce.sentinel2)'
        required: true
      s3_folder:
        description: 'Input S3 folder (eg: 2024_input_dir)'
        required: true

jobs:
  run-download:
    runs-on: ubuntu-latest
    steps:
      - name: Run download stage on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Starting stage: Download Sentinel-2 Images"
          
            # Check if EC2 Host is set (optional validation)
            if [ -z "${{ secrets.EC2_HOST }}" ]; then
              echo "::error::EC2_HOST is missing!"
              exit 1
            else
              echo "::notice::EC2_HOST is set"
            fi
            
            # Now actually run docker command with input arguments
            #docker pull dakshasinghal1999/download_image  # optional: pull latest image
            
            sudo docker run download_image download \
              --start-date "${{ github.event.inputs.start_date }}" \
              --end-date "${{ github.event.inputs.end_date }}" \
              --tiles "${{ github.event.inputs.tiles }}" \
              --s3_bucket "sce.sentinel2" \
              --s3_folder "${{ github.event.inputs.s3_folder }}"

            echo "::notice::Download stage completed!"
      - name: Clean up stopped containers
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Cleaning up stopped Docker containers"
            #sudo docker container prune -f
